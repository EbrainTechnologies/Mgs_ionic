import { Component,ViewChild } from '@angular/core';
import { IonicPage, NavController, NavParams,Nav } from 'ionic-angular';

export interface PageInterface {
  title: string;
  pageName: string;
  tabComponent?: any;
  index?: number;
  icon: string;
}

@IonicPage()
@Component({
  selector: 'page-menu',
  templateUrl: 'menu.html',
})
export class MenuPage {


  rootPage='TabsPage';
  @ViewChild(Nav) nav:Nav;
  pages: PageInterface[] = [
    { title: 'Home Page', pageName: 'TabsPage', tabComponent: 'HomePage', index: 0, icon: 'ios-home-outline' },
    { title: 'Profile', pageName: 'MyProfilePage', icon: 'ios-person-outline' },
    { title: 'Sports You Play', pageName: 'SelectSportsPage', icon: 'ios-play' }, 
    { title: 'Events', pageName: 'EventsPage', icon: 'ios-calendar-outline' }, 
    { title: 'Favourite Players', pageName: 'EventsPage', icon: 'ios-heart' }, 
    { title: 'Invite Friends', pageName: 'EventsPage', icon: 'md-person-add' }, 
    { title: 'Contact Us', pageName: 'ContactPage', icon: 'ios-mail-outline' }, 
    { title: 'About Page', pageName: 'TabsPage', tabComponent: 'AboutPage', index: 1, icon: 'ios-information-circle-outline' },
   /* { title: 'Contacts', pageName: 'TabsPage', tabComponent: 'ContactPage', index: 2, icon: 'ios-contact-outline' },*/
    /*{ title: 'Special', pageName: 'SpecialPage', icon: 'shuffle' },*/
  ];
  constructor(public navCtrl: NavController, public navParams: NavParams) {
  }
  openPage(page:PageInterface){
    let params = {};
    if (page.index) {
      params = { tabIndex: page.index };
    }

    if (this.nav.getActiveChildNav() && page.index != undefined) {
      this.nav.getActiveChildNav().select(page.index);
    }else{
      this.nav.setRoot(page.pageName, params);
    }
  }
  isActive(page:PageInterface){
    let childNav = this.nav.getActiveChildNav();
    if (childNav) {
      if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {
        return 'primary';
      }
      return;
    }
    if (this.nav.getActive() && this.nav.getActive().name === page.pageName) {
      return 'primary';
    }
    return;
  

  }
}
